import React, { useState, useEffect } from 'react'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É React –∏ —Ö—É–∫–∏ useState, useEffect
import './App.css'; // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
import ToDoForm from "./AddTask"; // –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á
import ToDo from "./Task"; // –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–∏
import axios from 'axios'; // –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤

// –ö–æ–Ω—Å—Ç–∞–Ω—Ça –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á –≤ LocalStorage
const TASKS_STORAGE_KEY = 'tasks-list-project-web';
// –ö–ª—é—á API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ
const weatherApiKey = 'c7616da4b68205c2f3ae73df2c31d177';
// –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä–∞
const KRASNODAR_LOCATION_LAT_LON = { lat: 45.039268, lon: 38.987221 };

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç
async function fetchCurrencyRates() {
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤–∞–ª—é—Ç–Ω—ã—Ö –∫—É—Ä—Å–∞—Ö
  const currencyResponse = await axios.get('https://www.cbr-xml-daily.ru/daily_json.js');
  if (!currencyResponse.data || !currencyResponse.data.Valute) {
    throw new Error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –≤–∞–ª—é—Ç–µ.');
  }
  // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫—É—Ä—Å—ã –¥–æ–ª–ª–∞—Ä–∞ –∏ –µ–≤—Ä–æ
  const USDrate = currencyResponse.data.Valute.USD.Value.toFixed(4).replace('.', ',');
  const EURrate = currencyResponse.data.Valute.EUR.Value.toFixed(4).replace('.', ',');
  return { USDrate, EURrate };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
function getUserCoordinates() {
  return new Promise(resolve => {
    navigator.geolocation.getCurrentPosition(
      position => {
        const lat = position.coords.latitude; // –®–∏—Ä–æ—Ç–∞
        const lon = position.coords.longitude; // –î–æ–ª–≥–æ—Ç–∞
        resolve({ lat, lon });
      },
      () => {
        console.warn('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ ‚Äî –±–µ—Ä—É –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä');
        resolve(KRASNODAR_LOCATION_LAT_LON);
      },
      { timeout: 10000 }
    );
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
async function fetchWeatherByCoords(lat, lon) {
  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ
  const weatherResponse = await axios.get(
    `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${weatherApiKey}`
  );
  if (!weatherResponse.data.main) {
    throw new Error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ.');
  }
  return weatherResponse.data;
}

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function App() {
  const [rates, setRates] = useState({}); // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∞–ª—é—Ç–Ω—ã—Ö –∫—É—Ä—Å–æ–≤
  const [weatherData, setWeatherData] = useState(null); //–°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ
  const [loading, setLoading] = useState(true); //–°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
  const [error, setError] = useState(''); //–°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á –∏–∑ localStorage
  const [todos, setTodos] = useState(() => {
    const storedTasks = localStorage.getItem(TASKS_STORAGE_KEY); // –ß–∏—Ç–∞–µ—Ç –∑–∞–¥–∞—á–∏ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –ø–æ –∫–ª—é—á—É
    if (storedTasks) {
      try {
        const parsedTasks = JSON.parse(storedTasks); // –ü–∞—Ä—Å–∏—Ç JSON —Å –∑–∞–¥–∞—á–∞–º–∏
        if (Array.isArray(parsedTasks)) {
          return parsedTasks; // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á
        } else {
          console.warn('–ó–∞–¥–∞—á–∞ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞, –Ω–æ –∏–º–µ–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:', parsedTasks);
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∑–∞–¥–∞—á –∏–∑ localStorage:', error.message);
      }
    }
    return [];
  });

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –≤–∞–ª—é—Ç–µ
  useEffect(() => {
    async function loadRates() {
      try {
        const data = await fetchCurrencyRates();
        setRates(data);
      } catch (err) {
        console.error(err);
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –≤–∞–ª—é—Ç–µ.');
      }
    }
    loadRates();
  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω—ã–π –∑–∞–ø—É—Å–∫ —ç—Ñ—Ñ–µ–∫—Ç–∞

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ
  useEffect(() => {
    async function loadWeather() {
      try {
        const { lat, lon } = await getUserCoordinates(); // –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (–∏–ª–∏ –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä)
        const data = await fetchWeatherByCoords(lat, lon); // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–≥–æ–¥—É
        setWeatherData(data);
      } catch (err) {
        console.error(err);
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ.');
      } finally {
        setLoading(false); // –ó–∞–≤–µ—Ä—à–∞–µ–º —ç—Ç–∞–ø –∑–∞–≥—Ä—É–∑–∫–∏
      }
    }
    loadWeather();
  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω—ã–π –∑–∞–ø—É—Å–∫ —ç—Ñ—Ñ–µ–∫—Ç–∞

  // –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á –≤ LocalStorage
  useEffect(() => {
    try {
      localStorage.setItem(TASKS_STORAGE_KEY, JSON.stringify(todos)); // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞–¥–∞—á –≤ localStorage:', error.message);
    }
  }, [todos]); // —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ tasks

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏
  const addTask = (userInput) => {
    if (userInput) {
      const newItem = {
        id: Math.random().toString(36).substr(2, 9), // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞
        task: userInput, // –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
        complete: false // –ó–∞–¥–∞—á–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      };
      setTodos([...todos, newItem]); // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
  const removeTask = (id) => {
    setTodos([...todos.filter((todo) => todo.id !== id)]); // –û—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞–¥–∞—á–∏ —Å id, –Ω–µ —Ä–∞–≤–Ω—ã–º –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏
  const handleToggle = (id) => {
    setTodos([
      ...todos.map((task) =>
        task.id === id ? { ...task, complete: !task.complete } : { ...task }
      )
    ]); // –ú–µ–Ω—è–µ–º —Å–≤–æ–π—Å—Ç–≤–æ complete –¥–ª—è –Ω—É–∂–Ω–æ–π –∑–∞–¥–∞—á–∏
  };

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  return (
    <>
      <div className="App">
        {loading && <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>} {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
        {!loading && error && <p style={{ color: 'red' }}>{error}</p>} {/* –í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –æ–Ω–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ */}
        {!loading && !error && ( // –ï—Å–ª–∏ –Ω–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—à–∏–±–æ–∫, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
          <>
            <div className='info'>
              <div className='money'> {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –µ–≤—Ä–æ –∏ –¥–æ–ª–ª–∞—Ä–∞*/}
                <div id="USD">–î–æ–ª–ª–∞—Ä –°–®–ê $ ‚Äî {rates.USDrate} —Ä—É–±.</div>
                <div id="EUR">–ï–≤—Ä–æ ‚Ç¨ ‚Äî {rates.EURrate} —Ä—É–±.</div>
              </div>
              {weatherData && ( // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
                <div className="weather-info">
                  <div>
                    –ü–æ–≥–æ–¥–∞ —Å–µ–≥–æ–¥–Ω—è: <br></br>
                    üå°Ô∏è {(weatherData.main.temp - 273.15).toFixed(1)}¬∞C {" "}
                    üí® {weatherData.wind.speed} –º/—Å{" "}
                    ‚òÅÔ∏è {weatherData.clouds.all}%{" "}
                    <img
                      className='weather-icon'
                      src={`https://openweathermap.org/img/w/${weatherData.weather[0].icon}.png`}
                      alt="–ò–∫–æ–Ω–∫–∞ –ø–æ–≥–æ–¥—ã"
                    />
                  </div>
                </div>
              )}
            </div>
          </>
        )}
        <header>
          <h1 className='list-header'>–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á: {todos.length}</h1>
        </header>
        <ToDoForm addTask={addTask} /> {/* –§–æ—Ä–º–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á */}
        {todos.map((todo) => {// –¶–∏–∫–ª –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–¥–∞—á
          return (
            <ToDo
              todo={todo}
              key={todo.id}
              toggleTask={handleToggle}
              removeTask={removeTask}
            />
          );
        })}
      </div>
    </>
  );
}

// –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ App
export default App;
